plugins {
    id 'fabric-loom' version '0.10-SNAPSHOT'
    id("io.github.juuxel.loom-quiltflower-mini") version "1.1.0"
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

group = 'com.teammoeg'
version = "${minecraft_version}-${mod_version}"
archivesBaseName = 'steampowered'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://cursemaven.com" }
    maven { url = "https://maven.parchmentmc.org" }
    maven { url = "https://maven.fabricmc.net/" }
    maven { url = "https://maven.tterrag.com/" }
    maven { url = "https://storage.googleapis.com/devan-maven/" }
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://aperlambda.github.io/maven" }
    maven { url = "https://ladysnake.jfrog.io/artifactory/mods" }
    maven { url = "https://maven.kotlindiscord.com/repository/terraformers/" }
    maven { url = "https://maven.devos.community/releases/" }
    maven { url = "https://maven.devos.community/snapshots/" }
    maven { url = "https://maven.terraformersmc.com/" }
    maven { url = "https://maven.cafeteria.dev" }
    maven {
        url = "https://jitpack.io/"
        content {
            includeGroup("com.github.PepperCode1")
            includeGroup("com.github.SuperCoder7979")
            includeGroup("com.github.Jozufozu")
        }
    }
    maven {
        url = "https://maven.jamieswhiteshirt.com/libs-release"
        content {
            includeGroup("com.jamieswhiteshirt")
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"

    // THIS IS SO CURSED I LOVE IT
    // names of mojmap with the docs and params of parchment, then docs and params of QM as fallback
    mappings loom.officialMojangMappings()
    modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")
    modApi(include("me.shedaniel.cloth:basic-math:0.6.0"))
    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}") { transitive = false }
    modRuntimeOnly("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}") { transitive = false }
    modImplementation("dev.architectury:architectury-fabric:${project.architectury_version}")

    // dependencies
    modImplementation(include("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"))
    modImplementation(include("me.alphamode:ForgeTags:1.2"))
    modImplementation(include("curse.maven:forge-config-api-port-fabric-547434:${project.config_api_version}"))
    modImplementation("com.simibubi:Create-Refabricated:mc1.18.1_v0.4b")
    implementation(include("com.google.code.findbugs:jsr305:${project.jsr305_version}"))
    modApi('teamreborn:energy:2.1.2')

}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}